{"version":3,"file":"static/js/186.a9b95f83.chunk.js","mappings":"mLACA,EAAyB,uB,SCiBzB,EAfe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,2HCmCD,UA9CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAsBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAAL,CAGA,IAAMO,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAGKK,EAAAA,EAAAA,IAAgBR,GAHrB,OAGRS,EAHQ,OAKdV,GAAW,OAAIU,EAAKC,UALN,gDAOdL,EAAS,KAAMM,SAPD,yBASdR,GAAa,GATC,4EAAH,qDAafI,GAdC,CAeF,GAAE,CAACP,KAIF,2BACGI,IAAS,yBAAG,oBAAkBA,EAAM,mBAEpCF,IAAa,SAAC,IAAD,IACbJ,IACC,wBACGA,EAAQc,KAAI,SAAAC,GAAE,OACb,2BACE,0BAAI,WAASA,EAAGC,WAChB,yBAAG,IAAED,EAAGE,aAFDF,EAAGG,GADC,MAQE,KAAb,OAAPlB,QAAO,IAAPA,OAAA,EAAAA,EAASmB,UAAgB,uBAAG,wCAGlC,C,+LChDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAY,mCAAG,sGACHF,EAAAA,EAAAA,IAAA,sBADG,uBAClBT,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qDAMZY,EAAe,mCAAG,WAAMC,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,6BAAgCI,IAD1B,uBACrBb,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfc,EAAc,mCAAG,WAAMvB,GAAN,yFACLkB,EAAAA,EAAAA,IAAA,gBAAmBlB,IADd,uBACpBS,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMde,EAAY,mCAAG,WAAMxB,GAAN,yFACHkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,aADG,uBAClBS,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZD,EAAe,mCAAG,WAAMR,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,aADM,uBACrBS,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","service/movies-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#910a6d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../service/movies-service';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMovieReviews(movieId);\n        // console.log('data', data);\n        setReviews([...data.results]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  // console.log('movieCast', movieCast);\n  return (\n    <div>\n      {error && <p>Sorry. There are {error} ðŸ˜­</p>}\n\n      {isLoading && <Loader />}\n      {reviews && (\n        <ul>\n          {reviews.map(el => (\n            <li key={el.id}>\n              <h4>Author: {el.author}</h4>\n              <p> {el.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews?.length === 0 && <p>Don't have reviews of this movie.</p>}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '2005be877b41dd3a0b1c9df70b469ec4',\n};\n\nexport const getMoviesDay = async () => {\n  const { data } = await axios.get(`trending/movie/day`);\n\n  return data;\n};\n\nexport const getMoviesSearch = async searchQuery => {\n  const { data } = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return data;\n};\n\nexport const getMovieDetail = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n\n  return data;\n};\n"],"names":["className","css","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","useState","reviews","setReviews","movieId","useParams","isLoading","setIsLoading","error","setError","useEffect","fetchData","getMovieReviews","data","results","message","map","el","author","content","id","length","axios","api_key","getMoviesDay","getMoviesSearch","searchQuery","getMovieDetail","getMovieCast"],"sourceRoot":""}