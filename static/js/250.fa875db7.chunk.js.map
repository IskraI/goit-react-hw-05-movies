{"version":3,"file":"static/js/250.fa875db7.chunk.js","mappings":"mLACA,EAAyB,uB,SCiBzB,EAfe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,iGCdYC,EAAOC,EAAAA,GAAAA,GAAH,kDAIJC,EAAKD,EAAAA,GAAAA,GAAH,uJAOFE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sR,kBCOrB,EAhBmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,KAAd,OACV,SAACT,EAAD,WACE,SAACC,EAAD,CAAUS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA9C,gBACGG,QADH,IACGA,EAAAA,EAASE,KAFLD,EADC,KASjB,C,4JClBYK,EAAQd,EAAAA,GAAAA,GAAH,oF,SCUlB,EARkB,WAChB,OAEI,SAACc,EAAD,UAAO,kBAGZ,E,SCPYC,EAAYf,EAAAA,GAAAA,GAAH,oFCqCtB,EA/Ba,WACX,OAA4BgB,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBJ,GAAa,GADG,mBAGYK,EAAAA,EAAAA,MAHZ,gBAGNC,EAHM,EAGNA,QACRR,EAAUQ,GAJI,gDAMdJ,EAAS,KAAMK,SAND,yBAQdP,GAAa,GARC,4EAAH,qDAWfI,GACD,GAAE,KAKD,UAACR,EAAD,YACE,SAAC,EAAD,IACCK,IAAS,yBAAG,SAAOA,KACnBF,GAAY,SAACS,EAAA,EAAD,KAAa,SAAC,IAAD,CAAWvB,OAAQA,MAGlD,C,+LCnCDwB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAML,EAAY,mCAAG,sGACHI,EAAAA,EAAAA,IAAA,sBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qDAMZC,EAAe,mCAAG,WAAMC,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,6BAAgCI,IAD1B,uBACrBF,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfG,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAAAA,EAAAA,IAAA,gBAAmBM,IADd,uBACpBJ,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdK,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZM,EAAe,mCAAG,WAAMF,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/Container.styled.jsx","pages/Home.jsx","service/movies-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#910a6d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  text-decoration: none;\n`;\n\nexport const Li = styled.li`\n  /* padding: 8px 16px; */\n  /* border-radius: 4px; */\n  text-decoration: none;\n  /* color: black; */\n  font-weight: 500;\n`;\nexport const ItemLink = styled(NavLink)`\n  display: block;\n  padding: 4px 4px;\n  /* border-radius: 4px; */\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    color: #910a6d;\n  }\n  &.active {\n    color: white;\n    background-color: #910a6d;\n  }\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { List, ItemLink, Li } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log('Location', location);\n  return (\n    <List>\n      {movies.map(({ title, id, name }) => (\n        <Li key={id}>\n          <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n            {title ?? name}\n          </ItemLink>\n        </Li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\nexport const Title = styled.h2`\n  font-size: 22px;\n  text-align: left;\n  color: #910a6d;\n`;\n","import React from 'react';\nimport { Title } from './Title.styled';\n\nconst TitleHome = () => {\n  return (\n\n      <Title>Trending today</Title>\n \n  );\n};\n\nexport default TitleHome;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n","import React from 'react';\nimport Loader from '../components/Loader/Loader';\nimport MovieList from '../components/MoviesList/MoviesList';\nimport TitleHome from '../components/Title/Title';\nimport { getMoviesDay } from '../service/movies-service';\nimport { useState, useEffect } from 'react';\nimport { Container } from './Container.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await getMoviesDay();\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // console.log('movies', movies);\n\n  return (\n    <Container>\n      <TitleHome />\n      {error && <p>Sorry {error}</p>}\n      {isLoading ? <Loader /> : <MovieList movies={movies} />}\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '2005be877b41dd3a0b1c9df70b469ec4',\n};\n\nexport const getMoviesDay = async () => {\n  const { data } = await axios.get(`trending/movie/day`);\n\n  return data;\n};\n\nexport const getMoviesSearch = async searchQuery => {\n  const { data } = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return data;\n};\n\nexport const getMovieDetail = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n\n  return data;\n};\n"],"names":["className","css","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","styled","Li","ItemLink","NavLink","movies","location","useLocation","map","title","id","name","to","state","from","Title","Container","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchData","getMoviesDay","results","message","Loader","axios","api_key","data","getMoviesSearch","searchQuery","getMovieDetail","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}