{"version":3,"file":"static/js/83.75dfd45c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","service/movies-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#910a6d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  text-decoration: none;\n`;\n\nexport const Li = styled.li`\n  /* padding: 8px 16px; */\n  /* border-radius: 4px; */\n  text-decoration: none;\n  /* color: black; */\n  font-weight: 500;\n`;\nexport const ItemLink = styled(NavLink)`\n  display: block;\n  padding: 4px 4px;\n  /* border-radius: 4px; */\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    color: #910a6d;\n  }\n  &.active {\n    color: white;\n    background-color: #910a6d;\n  }\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { List, ItemLink, Li } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log('Location', location);\n  return (\n    <List>\n      {movies.map(({ title, id, name }) => (\n        <Li key={id}>\n          <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n            {title ?? name}\n          </ItemLink>\n        </Li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchFormStyled = styled.form`\n  width: 350px;\n  /* margin-left: auto; */\n  margin-right: auto;\n\n  position: relative;\n\n  margin-bottom: 20px;\n`;\n\nexport const InputStyled = styled.input`\n  width: 100%;\n\n  border: 1px solid grey;\n  border-radius: 4px;\n\n  padding: 4px;\n  font-size: 18px;\n  outline: none;\n  letter-spacing: 0.06em;\n  font-weight: 200;\n\n  transition: all 0.5s ease-in-out;\n\n  /* padding-right: 40px; */\n\n  /* cursor: pointer; */\n`;\n\nexport const BtnSearch = styled.button`\n  /* width: 50px; */\n  /* height: 50px; */\n  /* margin-top:auto */\n  font-size: 18px;\n  /* font-weight: bold; */\n  color: rgb(145, 10, 109);\n  /* justify-content: center; */\n  position: absolute;\n  top: 2px;\n\n  right: 0;\n  transition: all 0.3s ease-in-out;\n  :hover {\n    color: white;\n    background-color: rgb(145, 10, 109, 0.9);\n  }\n`;\n","import React from 'react';\nimport { BtnSearch, InputStyled, SearchFormStyled } from './SearchBox.styled';\nimport { useState } from 'react';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInputSubmit = event => setSearchQuery(event.target.value);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchQuery.trim().toLowerCase());\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchFormStyled onSubmit={handleFormSubmit}>\n      <InputStyled\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleInputSubmit}\n        value={searchQuery}\n      />\n      <BtnSearch type=\"submit\">Search</BtnSearch>\n    </SearchFormStyled>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getMoviesSearch } from '../service/movies-service';\nimport Loader from 'components/Loader/Loader';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MovieList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showMovies, setShowMovies] = useState(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  // console.log('movieName', movieName);\n  // console.log('query', query);\n\n  const location = useLocation();\n  // console.log('location search', location);\n  if (query === '') {\n    if (movieName !== '') {\n      setQuery(movieName);\n    }\n  }\n  const handleSubmit = searchQuery => {\n    if (searchQuery === '') {\n      alert('Please input query');\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n    setError(null);\n    setIsLoading(false);\n    setShowMovies(true);\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const { results } = await getMoviesSearch(movieName);\n        setMovies(results);\n        if (results.length === 0) {\n          setShowMovies(false);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieName]);\n\n  return (\n    <>\n      <SearchBox onSubmit={handleSubmit} />\n      {!showMovies && <p>Sorry. There are no images ... ðŸ˜­</p>}\n      {error && <p>Sorry. There are {error} ðŸ˜­</p>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <MovieList movies={movies} state={{ from: location }} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '2005be877b41dd3a0b1c9df70b469ec4',\n};\n\nexport const getMoviesDay = async () => {\n  const { data } = await axios.get(`trending/movie/day`);\n\n  return data;\n};\n\nexport const getMoviesSearch = async searchQuery => {\n  const { data } = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return data;\n};\n\nexport const getMovieDetail = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n\n  return data;\n};\n"],"names":["className","css","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","styled","Li","ItemLink","NavLink","movies","location","useLocation","map","title","id","name","to","state","from","SearchFormStyled","InputStyled","BtnSearch","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","toLowerCase","type","autoComplete","autoFocus","placeholder","onChange","target","value","query","setQuery","setMovies","isLoading","setIsLoading","error","setError","showMovies","setShowMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchData","getMoviesSearch","results","length","message","alert","Loader","axios","api_key","getMoviesDay","data","getMovieDetail","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}