{"version":3,"file":"static/js/247.0dcade95.chunk.js","mappings":"2OAmEA,UA7Da,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAqBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAAL,CAIA,IAAMO,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaR,GAFlB,OAERS,EAFQ,OAIdV,GAAa,OAAIU,EAAKC,OAJR,gDAMdP,EAAS,KAAMQ,SAND,yBAQdN,GAAa,GARC,4EAAH,qDAWfE,GAbC,CAcF,GAAE,CAACP,KAIF,gCACGE,IAAS,yBAAG,oBAAkBA,EAAM,mBACpCE,GACC,SAAC,IAAD,KAEA,2BACGN,IACC,wBACGA,EAAUc,KAAI,SAAAC,GAAE,OACf,2BACE,gBACEC,IACED,EAAGE,aAAH,0CACuCF,EAAGE,cACtC,sCAENC,IAAKH,EAAGI,KACRC,MAAM,MACNC,OAAO,SAET,wBAAKN,EAAGI,QACR,yBAAG,cAAYJ,EAAGO,eAZXP,EAAGQ,GADG,MAkBE,KAAb,OAATvB,QAAS,IAATA,OAAA,EAAAA,EAAWwB,UACV,uBAAG,8DAMd,C,mEChED,EAAyB,uB,SCiBzB,EAfe,WACb,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEL,OAAO,KACPD,MAAM,KACNO,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,+LCfDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAY,mCAAG,sGACHF,EAAAA,EAAAA,IAAA,sBADG,uBAClBrB,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qDAMZwB,EAAe,mCAAG,WAAMC,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,6BAAgCI,IAD1B,uBACrBzB,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMf0B,EAAc,mCAAG,WAAMnC,GAAN,yFACL8B,EAAAA,EAAAA,IAAA,gBAAmB9B,IADd,uBACpBS,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdD,EAAY,mCAAG,WAAMR,GAAN,yFACH8B,EAAAA,EAAAA,IAAA,gBAAmB9B,EAAnB,aADG,uBAClBS,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZ2B,EAAe,mCAAG,WAAMpC,GAAN,yFACN8B,EAAAA,EAAAA,IAAA,gBAAmB9B,EAAnB,aADM,uBACrBS,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","service/movies-service.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../service/movies-service';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams(); //динамический параметр\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const data = await getMovieCast(movieId);\n        // console.log('data', data);\n        setMovieCast([...data.cast]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  // console.log('movieCast', movieCast);\n\n  return (\n    <>\n      {error && <p>Sorry. There are {error} 😭</p>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          {movieCast && (\n            <ul>\n              {movieCast.map(el => (\n                <li key={el.id}>\n                  <img\n                    src={\n                      el.profile_path\n                        ? `https://image.tmdb.org/t/p/w500/${el.profile_path}`\n                        : 'https://via.placeholder.com/100x150'\n                    }\n                    alt={el.name}\n                    width=\"100\"\n                    height=\"150\"\n                  />\n                  <h4>{el.name}</h4>\n                  <p>Character: {el.character}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n          {movieCast?.length === 0 && (\n            <p>Don't have information about the cast of this movie.</p>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#910a6d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '2005be877b41dd3a0b1c9df70b469ec4',\n};\n\nexport const getMoviesDay = async () => {\n  const { data } = await axios.get(`trending/movie/day`);\n\n  return data;\n};\n\nexport const getMoviesSearch = async searchQuery => {\n  const { data } = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return data;\n};\n\nexport const getMovieDetail = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n\n  return data;\n};\n"],"names":["useState","movieCast","setMovieCast","movieId","useParams","error","setError","isLoading","setIsLoading","useEffect","fetchData","getMovieCast","data","cast","message","map","el","src","profile_path","alt","name","width","height","character","id","length","className","css","color","ariaLabel","wrapperStyle","wrapperClass","visible","axios","api_key","getMoviesDay","getMoviesSearch","searchQuery","getMovieDetail","getMovieReviews"],"sourceRoot":""}